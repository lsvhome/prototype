<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:FexSync"
                    xmlns:MenuItem="http://schemas.microsoft.com/xps/2005/06">

    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="{Binding SyncStatusHeader, Mode=OneWay}" />
        <MenuItem Header="Sign In" Command="{Binding SignInCommand}" />
        <MenuItem Header="Sign Out" Command="{Binding SignOutCommand}" />
        <MenuItem Header="Pause" Command="{Binding DisconnectCommand}" />
        <MenuItem Header="Continue" Command="{Binding ConnectCommand}" />
        <MenuItem Header="Settings" Command="{Binding ShowSettingsCommand}" />
        <MenuItem Header="Alerts" Command="{Binding AlertsShowCommand}" />
        <MenuItem Header="Quick Start" Command="{Binding QuickStartCommand}" />
        <Separator />
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="{Binding IconPath}"
                    ToolTipText="{Binding ToolTipText}"
                    DoubleClickCommand="{Binding ShowMainWindowCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">

        <!-- self-assign a data context (could also be done programmatically)
        <tb:TaskbarIcon.DataContext>
            <local:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
         -->
    </tb:TaskbarIcon>

    <MenuItem:Style TargetType="MenuItem">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </MenuItem:Style>

</ResourceDictionary>